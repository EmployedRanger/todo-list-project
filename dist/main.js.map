{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;AAAA;AACO;AACP;AACA;AACO;AACP;AACA;;;;;;;;;;;;;;ACNe;AACf;AACA;AACA;AACA;;;;;;;;;;;;;;ACJe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACTmD;AACX;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB,eAAe,mEAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClCwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,iBAAiB,4DAAM;AACvB,kBAAkB,4DAAM;AACxB;AACA;AACA;AACA,IAAI;AACJ;AACA,8BAA8B;AAC9B,IAAI;AACJ;AACA;AACA;;;;;;;;;;;;;;;;AC/CgD;AACS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,2BAA2B,gEAAU;AACrC,4BAA4B,gEAAU;AACtC;AACA;;;;;;;;;;;;;;;;ACnCkD;AACO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ,iEAAiE;AACpF,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,4BAA4B,iEAAW;AACvC,6BAA6B,iEAAW;AACxC;AACA;;;;;;;;;;;;;;;;AC1CgD;AACS;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ,iEAAiE;AACpF,WAAW,eAAe;AAC1B,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,iBAAiB;AACvE;AACA;;AAEe;AACf,EAAE,sEAAY;AACd,SAAS,gEAAU;AACnB;;;;;;;;;;;;;;;;ACrC8C;AACW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,SAAS;AACtB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,SAAS,+DAAS;AAClB;;;;;;;;;;;;;;;;AC1BwC;AACiB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,aAAa,4DAAM;AACnB;AACA;AACA;;;;;;;;;;;;;;;;;;ACzBwC;AACW;AACM;AACW;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,WAAW,QAAQ,iEAAiE;AACpF,WAAW,eAAe;AAC1B,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,iBAAiB;AAClF;AACA;AACe;AACf;AACA,EAAE,sEAAY;AACd,uBAAuB,+EAAiB;AACxC,qBAAqB,mEAAS;;AAE9B;AACA;AACA;AACA;AACA,aAAa,4DAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC/C0C;AACe;AACN;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,QAAQ;AACnB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd,eAAe,mEAAS;AACxB,SAAS,6DAAO;AAChB;;;;;;;;;;;;;;;;ACzBwD;AACC;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,aAAa,MAAM;AACnB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe;AACf,EAAE,sEAAY;AACd;;AAEA;AACA,kCAAkC,6EAAO;AACzC;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACnDA;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;;AAE2E;AAC1C;AACO;;AAExC;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,kEAAqB;AACzB,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,sDAAa;AACjB,GAAG;AACH;;;AAGO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,iDAAO;AAC7B;AACA;AACA,IAAI,qDAAa;AACjB,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM,qDAAa;AACnB,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,sBAAsB,iDAAO;AAC7B;;AAEA;;AAEA;AACA,IAAI,qDAAa;AACjB,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,iEAAqB;AAC3B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxJA;AAC4D;AACI;AAK/C;AAC8B;AACf;;AAEhC;AACA;AACA,uBAAuB,gDAAO;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,oBAAoB,4DAAiB;;AAErC;AACA,4BAA4B,yEAAqB;AACjD;;AAEA,IAAI,iEAAqB;AACzB;;AAEA;AACA;AACA;AACA,IAAI,oDAAY;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yDAAiB;;AAE5C;AACA,sBAAsB,kDAAU;AAChC;AACA,MAAM,oDAAY;AAClB;AACA;;AAEA,IAAI,sDAAU;AACd;AACA;AACA;AACA;;AAEe;AACf;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;;ACvFA;AAGkB;;AAElB,WAAW,aAAa;AACY;;AAEpC;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2DAA2D,iBAAiB;AAC5E;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa,oDAAO,CAAC,oDAAM;AAC3B,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,aAAa,oDAAU,CAAC,oDAAO,CAAC,oDAAM;AACtC,KAAK;AACL;AACA;;AAEO;AACP;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnGA;AACmC;AACF;AACN;;AAE3B;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,UAAU,kDAAQ;AAClB;AACA;;AAEA;AACA,gEAAgE,iDAAO;AACvE;;AAEA;AACA;AACA,2DAA2D,8CAAI;AAC/D;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA,iEAAe,OAAO,EAAC;;;;;;;;;;;;;;;;;;;;;AC/EvB;AACA,YAAY,iBAAiB;AAC7B,YAAY,aAAa;;AAEI;;AAE7B;AACe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,MAAM,GAAG,IAAI,GAAG,KAAK;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACpIA;AAC8C;AACb;AACN;;AAEZ;AACf;AACA;AACA;AACA,2BAA2B,iDAAO;AAClC,2BAA2B,iDAAO;AAClC,2BAA2B,iDAAO;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,gBAAgB,EAAE,kBAAkB;AAChE,mCAAmC,uBAAuB,EAAE,yBAAyB;;AAErF,6CAA6C,8CAAI;AACjD,OAAO;AACP,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,4BAA4B,iBAAiB,oBAAoB;AACjE,mCAAmC,wBAAwB,2BAA2B;AACtF,6CAA6C,8CAAI;AACjD,OAAO;AACP,KAAK;;AAEL;AACA,qEAAqE,oDAAU;AAC/E,QAAQ,oDAAM;AACd,QAAQ,oDAAM;AACd;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC/EA;AACO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;;AAEO;AACP;AACA;AACA;;;;;;;;;;;;;;;ACvBe;AACf;;AAEA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;;;;;UCRA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA,YAAY,MAAM;;AAEO;AAKI;AAC4B;AACZ;;AAE7C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8CAA8C,0BAA0B;;AAExE;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAU;AACd,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,0EAAsB;AACvD,iCAAiC,0EAAsB;AACvD,iCAAiC,0EAAsB;;AAEvD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,4BAA4B,yEAAqB;AACjD,4BAA4B,yEAAqB;AACjD,+BAA+B,yEAAqB;AACpD,+BAA+B,qEAAiB;;AAEhD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,2DAAc;AAClB,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE,sDAAkB;AACpB;AACA;;AAEA;AACA;AACA,CAAC","sources":["webpack://todo-list-project/./node_modules/date-fns/esm/_lib/defaultOptions/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/_lib/requiredArgs/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/_lib/toInteger/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/addDays/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/compareAsc/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/isSameDay/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/isSameWeek/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/isThisWeek/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/isToday/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/startOfDay/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/startOfWeek/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/subDays/index.js","webpack://todo-list-project/./node_modules/date-fns/esm/toDate/index.js","webpack://todo-list-project/./src/css/style.scss","webpack://todo-list-project/./src/creation-segments.js","webpack://todo-list-project/./src/interface.js","webpack://todo-list-project/./src/projects.js","webpack://todo-list-project/./src/storage.js","webpack://todo-list-project/./src/tasks.js","webpack://todo-list-project/./src/todo-list.js","webpack://todo-list-project/./src/utilities.js","webpack://todo-list-project/./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack://todo-list-project/webpack/bootstrap","webpack://todo-list-project/webpack/runtime/define property getters","webpack://todo-list-project/webpack/runtime/hasOwnProperty shorthand","webpack://todo-list-project/webpack/runtime/make namespace object","webpack://todo-list-project/./src/base.js"],"sourcesContent":["var defaultOptions = {};\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n  var number = Number(dirtyNumber);\n  if (isNaN(number)) {\n    return number;\n  }\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} - the new date with the days added\n * @throws {TypeError} - 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1;\n    // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import startOfWeek from \"../startOfWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport default function isSameWeek(dirtyDateLeft, dirtyDateRight, options) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfWeek = startOfWeek(dirtyDateLeft, options);\n  var dateRightStartOfWeek = startOfWeek(dirtyDateRight, options);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}","import isSameWeek from \"../isSameWeek/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * const result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\n\nexport default function isThisWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  return isSameWeek(dirtyDate, Date.now(), options);\n}","import isSameDay from \"../isSameDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * const result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getDefaultOptions } from \"../_lib/defaultOptions/index.js\";\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport default function startOfWeek(dirtyDate, options) {\n  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;\n  requiredArgs(1, arguments);\n  var defaultOptions = getDefaultOptions();\n  var weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options === null || options === void 0 ? void 0 : options.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions.locale) === null || _defaultOptions$local === void 0 ? void 0 : (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);\n\n  // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addDays from \"../addDays/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport default function subDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addDays(dirtyDate, -amount);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (argument instanceof Date || _typeof(argument) === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments\");\n      // eslint-disable-next-line no-console\n      console.warn(new Error().stack);\n    }\n    return new Date(NaN);\n  }\n}","// extracted by mini-css-extract-plugin\nexport {};","/* eslint-disable no-console */\n/* eslint-disable no-multiple-empty-lines */\n/* eslint-disable no-trailing-spaces */\n/* eslint-disable semi */\n\nimport { closeProjectFormPopup, makeProjectFormActive } from './utilities';\nimport Project from './projects';\nimport { switchProject } from './tasks';\n\nconst listProjects = [];\nconst userProjects = [];\n\nexport class Task {\n  constructor(name, description, timeline = 'No date') {\n    this.name = name;\n    this.description = description;\n    this.timeline = timeline;\n  }\n\n  setName(name) {\n    console.log('setName in tasks was used');\n    this.name = name;\n  }\n\n  setDescription(description) {\n    console.log('setDescription in tasks was used');\n    this.description = description;\n  }\n}\n\nexport function createFormProject() {\n  console.log('createFormProject ran')\n  const addContainer = document.createElement('div')\n  addContainer.classList.add('project-form-container')\n  const titleContainer = document.createElement('input')\n  titleContainer.setAttribute('id', 'project-title-input')\n  titleContainer.setAttribute('placeholder', 'Project Title')\n  titleContainer.setAttribute('type', 'text')\n\n  const buttonContainer = document.createElement('div')\n  buttonContainer.classList.add('form-container')\n\n  const submitButton = document.createElement('button')\n  submitButton.classList.add('submit-new-project')\n  submitButton.classList.add('form')\n  submitButton.textContent = 'Add Project'\n  buttonContainer.appendChild(submitButton)\n\n  const cancelButton = document.createElement('button')\n  cancelButton.classList.add('cancel-form')\n  cancelButton.classList.add('form')\n  cancelButton.textContent = 'Cancel'\n  cancelButton.addEventListener('click', () => {\n    closeProjectFormPopup();\n  })\n  buttonContainer.appendChild(cancelButton)\n\n  addContainer.appendChild(titleContainer)\n  addContainer.appendChild(buttonContainer)\n  return addContainer;\n}\n\nfunction deleteProject(projectElement) {\n  projectElement.remove();\n  console.log(listProjects[0])\n  // switchProject(listProjects[1]);\n  setTimeout(() => {\n    switchProject(listProjects[0]);\n  }, 0);\n}\n\n\nexport function createScheduledProject(scheduledName, itemTitle, symbolText) {\n  const div = document.createElement('button');\n  div.classList.add('scheduled-item');\n  div.classList.add(scheduledName);\n  div.classList.add('selection-option');\n  \n  const iconSpan = document.createElement('span');\n  iconSpan.classList.add('material-symbols-outlined');\n  iconSpan.textContent = symbolText;\n  const project = new Project(scheduledName);\n  listProjects.push(project);\n  div.addEventListener('click', () => {\n    switchProject(project);\n  });\n  \n  const itemText = document.createElement('p');\n  itemText.textContent = itemTitle;\n  \n  div.appendChild(iconSpan);\n  div.appendChild(itemText);\n\n  if (scheduledName === 'current-list') {\n    setTimeout(() => {\n      switchProject(project);\n    }, 0);\n  }  \n  console.log(listProjects);\n\n  return div;\n}\n  \nexport function createProjectCreation(projectName, icon, addNew) {\n  const projectDiv = document.createElement('button');\n  projectDiv.classList.add('project');\n\n  const projectItem = document.createElement('p');\n  projectItem.textContent = projectName;\n\n  const projectIcon = document.createElement('span');\n  projectIcon.classList.add('material-symbols-outlined');\n  projectIcon.textContent = icon;\n\n  const project = new Project(projectName);\n  userProjects.push(project);\n\n  projectDiv.dataset.project = JSON.stringify(project);\n\n  projectDiv.addEventListener('click', () => {\n    switchProject(project);\n  });\n\n  const doubleContainer = document.createElement('div');\n  doubleContainer.classList.add('double-container');\n  const deleteButton = document.createElement('span');\n  deleteButton.classList.add('material-symbols-outlined');\n  deleteButton.classList.add('delete-project-button');\n  deleteButton.textContent = 'close';\n\n  deleteButton.addEventListener('click', () => {\n    deleteProject(projectDiv);\n  })\n\n  doubleContainer.appendChild(projectIcon);\n  doubleContainer.appendChild(projectItem);\n  projectDiv.appendChild(doubleContainer);\n  \n  if (addNew !== '') {\n    projectDiv.classList.add('add-project');\n    projectDiv.addEventListener('click', () => {\n      makeProjectFormActive();\n    })\n    // const moveIcon = document.createElement('span')\n    // moveIcon.classList.add('material-symbols-outlined')\n    // moveIcon.classList.add('moveable')\n    // moveIcon.textContent = 'dehaze'\n    // projectDiv.appendChild(moveIcon)      \n  } else {\n    projectDiv.appendChild(deleteButton);\n  }\n  return projectDiv;\n}\n","/* eslint-disable no-console */\nimport { createProjectCreation } from './creation-segments';\nimport { closePopup, closeProjectFormPopup } from './utilities';\nimport {\n  displayTasks,\n  createTask,\n  getCurrentProject,\n} from './tasks';\nimport { createProjectMain } from './projects';\nimport Storage from './storage';\n\nclass UserInterface {\n  constructor() {\n    this.storage = new Storage();\n  }\n\n  loadProjects() {\n    console.log('loadProjects was used in UI');\n    this.storage.getTodo().getProjects().forEach((project) => {\n      if (\n        project.getName() !== 'Current'\n        && project.getName() !== 'Today'\n        && project.getName() !== 'This week'\n      ) {\n        this.createProject(project.getName());\n      }\n    });\n  }\n\n  createProject() {\n    console.log('createProject ran from inside UI');\n    const titleProject = document.querySelector('#project-title-input').value;\n    const project = createProjectMain(titleProject);\n\n    const projectName = document.querySelector('.list-container-projects');\n    projectName.appendChild(createProjectCreation(project.getName(), 'task', ''));\n    this.storage.addProject(project);\n\n    closeProjectFormPopup();\n  }\n\n  switchProject(project) {\n    console.log('switchProject was called from UI');\n    const projectTasks = project.getTasks();\n    displayTasks(projectTasks);\n  }\n\n  submitNewTask() {\n    const titleTask = document.querySelector('#input-title');\n    const descriptionTask = document.querySelector('#input-description');\n    const titleValue = titleTask.value;\n    const descriptionValue = descriptionTask.value;\n    const currentProject = getCurrentProject();\n\n    if (currentProject) {\n      const newTask = createTask(titleValue, descriptionValue);\n      currentProject.addTask(newTask);\n      displayTasks(currentProject);\n      this.storage.addTask(currentProject.getName(), newTask);\n    }\n\n    closePopup();\n    titleTask.value = '';\n    descriptionTask.value = '';\n  }\n}\n\nexport default function applyClicksButtons() {\n  const ui = new UserInterface();\n\n  const addTaskButton = document.querySelector('.submit-form');\n  addTaskButton.addEventListener('click', () => {\n    ui.submitNewTask();\n  });\n\n  const addProjectButton = document.querySelector('.submit-new-project');\n  addProjectButton.addEventListener('click', () => {\n    ui.createProject();\n  });\n\n  const projectButtons = document.querySelectorAll('.project');\n  projectButtons.forEach((button) => {\n    button.addEventListener('click', () => {\n      const project = JSON.parse(button.dataset.project);\n      ui.switchProject(project);\n    });\n  });\n}\n","/* eslint-disable no-console */\nimport {\n  isToday, toDate, subDays, isThisWeek,\n} from 'date-fns';\n\n// const { v4: uuidv4 } = require('uuid');\nimport { v4 as uuidv4 } from 'uuid';\n\nconst projectList = [];\n\nexport default class Project {\n  constructor(name) {\n    this.name = name;\n    this.tasks = [];\n    projectList.push(name);\n  }\n\n  setName(name) {\n    console.log('setName was used inside project class');\n    this.name = name;\n  }\n\n  getName() {\n    const today = new Date().toLocaleDateString('en-US', { weekday: 'long' });\n    const projectNames = {\n      'today-list': `${today} to-do list`,\n      'week-list': 'This week to-do list',\n      'current-list': 'Current to-do list',\n    };\n    const formattedName = projectNames[this.name] || this.name;\n    return formattedName;\n  }\n\n  setID() {\n    console.log('setID was used');\n    return this.uuidv4();\n  }\n\n  // getID() {\n  //   console.log('getID was used');\n  //   return this.ID;\n  // }\n\n  setTasks(tasks) {\n    console.log('setTasks was used');\n    this.tasks = tasks;\n  }\n\n  getTasks() {\n    // console.log('getTasks was used');\n    return this.tasks;\n  }\n\n  getTask(taskName) {\n    console.log('getTask(taskName) was used');\n    return this.tasks.find((task) => task.getName() === taskName);\n  }\n\n  getTaskCount() {\n    return this.tasks.length;\n  }\n\n  contains(taskName) {\n    console.log('contains was used');\n    return this.tasks.some((task) => task.getName() === taskName);\n  }\n\n  addTask(newTask) {\n    console.log('addTask was used inside projects.js');\n    if (this.tasks.find((task) => task.getName() === newTask.name)) return;\n    this.tasks.push(newTask);\n  }\n\n  deleteTask(taskName) {\n    console.log('deleteTask was used');\n    this.tasks = this.tasks.filter((task) => task.name !== taskName);\n  }\n\n  getDailyTasks() {\n    console.log('getDailyTasks was used');\n    return this.tasks.filter((task) => {\n      const taskDate = new Date(task.getDateFormatted());\n      return isToday(toDate(taskDate));\n    });\n  }\n\n  getWeeklyTasks() {\n    console.log('getWeeklyTasks was used');\n    return this.tasks.filter((task) => {\n      const taskDate = new Date(task.getDateFormatted());\n      return isThisWeek(subDays(toDate(taskDate), 1));\n    });\n  }\n}\n\nexport function createProjectMain(title) {\n  console.log('createProject inside projects.js was called');\n  const project = new Project(title);\n  return project;\n}\n","/* eslint-disable no-console */\nimport TodoList from './todo-list';\nimport Project from './projects';\nimport Task from './tasks';\n\nconst Storage = {\n  saveList(data) {\n    localStorage.setItem('todoList', JSON.stringify(data));\n  },\n\n  getTodo() {\n    const todoList = Object.assign(\n      new TodoList(),\n      JSON.parse(localStorage.getItem('todoList')),\n    );\n\n    todoList.setProjects(\n      todoList.getProjects().map((project) => Object.assign(new Project(), project)),\n    );\n\n    todoList.getProjects().forEach((project) => {\n      project.setTasks(\n        project.getTasks().map((task) => Object.assign(new Task(), task)),\n      );\n    });\n\n    return todoList;\n  },\n\n  addProject(project) {\n    const todoList = Storage.getTodo();\n    todoList.addProject(project);\n    Storage.saveList(todoList);\n  },\n\n  deleteProject(projectName) {\n    const todoList = Storage.getTodo();\n    todoList.deleteProject(projectName);\n    Storage.saveList(todoList);\n  },\n\n  addTask(projectName, task) {\n    const todoList = Storage.getTodo();\n    todoList.getProject(projectName).addTask(task);\n    Storage.saveList(todoList);\n  },\n\n  deleteTask(projectName, taskName) {\n    const todoList = Storage.getTodo();\n    todoList.getProject(projectName).deleteTask(taskName);\n    Storage.saveList(todoList);\n  },\n\n  renameTask(projectName, taskName, newTaskName) {\n    const todoList = Storage.getTodo();\n    todoList\n      .getProject(projectName)\n      .getTask(taskName)\n      .setName(newTaskName);\n    Storage.saveList(todoList);\n  },\n\n  updateTodayProject() {\n    console.log('updateTodayProject in Storage ran');\n    const todoList = Storage.getTodo();\n    todoList.updateTodayProject();\n    Storage.saveList(todoList);\n  },\n\n  updateWeekProject() {\n    console.log('updateWeekProject in Storage ran');\n    const todoList = Storage.getTodo();\n    todoList.updateWeekProject();\n    Storage.saveList(todoList);\n  },\n};\n\nconst storage = Object.create(Storage);\n\nexport default storage;\n","/* eslint-disable no-plusplus */\n// import { createTodoItem } from './creation-segments';\n// import { closePopup } from './utilities';\n\nimport { } from './projects';\n\n/* eslint-disable no-console */\nexport default class Task {\n  constructor(name, description, timeline = 'No date') {\n    this.name = name;\n    this.description = description;\n    this.timeline = timeline;\n  }\n\n  setName(name) {\n    console.log('setName in tasks was used');\n    this.name = name;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  setDescription(description) {\n    console.log('setDescription in tasks was used');\n    this.description = description;\n  }\n\n  getDescription() {\n    return this.description;\n  }\n\n  setTimeline(timeline) {\n    console.log('setTimeline in tasks was used');\n    this.timeline = timeline;\n  }\n\n  // getDate() {\n  //   console.log('getDate in tasks was used');\n  //   return this.timeline;\n  // }\n\n  // getDateFormatted() {\n  //   console.log('getDateFormatted in tasks was used');\n  //   const day = this.timeline.split('/')[0];\n  //   const month = this.timeline.split('/')[1];\n  //   const year = this.timeline.split('/')[2];\n  //   return `${month}/${day}/${year}`;\n  // }\n}\n\nfunction deleteTask(project, taskName) {\n  const tasks = project.getTasks();\n  const updatedTasks = tasks.filter((task) => task.getName() !== taskName);\n  Storage.deleteTask(taskName);\n  project.setTasks(updatedTasks);\n}\n\nfunction createTaskInProject(taskName, description, project) {\n  const todoSection = document.querySelector('.Todo-section');\n\n  console.log('createTaskInProject was called');\n  const taskItem = document.createElement('div');\n  taskItem.classList.add('task-item');\n\n  const taskTitle = document.createElement('div');\n  taskTitle.classList.add('task-name');\n  taskTitle.textContent = taskName;\n  taskItem.appendChild(taskTitle);\n\n  const taskDescription = document.createElement('div');\n  taskDescription.classList.add('task-description');\n  taskDescription.textContent = description;\n\n  const taskIcon = document.createElement('span');\n  taskIcon.classList.add('material-symbols-outlined');\n  taskIcon.classList.add('icon-button');\n  taskIcon.textContent = 'check_circle';\n  taskIcon.addEventListener('click', () => {\n    deleteTask(project, taskName);\n    taskItem.remove();\n  });\n\n  Storage.addTask(project, taskName);\n  taskItem.appendChild(taskDescription);\n  taskItem.appendChild(taskIcon);\n  todoSection.appendChild(taskItem);\n}\n\nexport function createTask(title, description) {\n  const newTask = new Task(title, description);\n  return newTask;\n}\n\nlet currentProject = null;\n\nexport function getCurrentProject() {\n  return currentProject;\n}\n\nexport function displayTasks(project) {\n  const contentArea = document.getElementsByClassName('Todo-section')[0];\n  contentArea.innerHTML = '';\n\n  const taskList = project.getTasks();\n\n  // Creates and adds task elements\n  taskList.forEach((task) => {\n    const taskName = task.getName();\n    const taskDescription = task.getDescription();\n    createTaskInProject(taskName, taskDescription, project);\n  });\n}\n\nexport function switchProject(project) {\n  console.log('switchProject was called in tasks.js');\n  console.log(project);\n  const newTitleName = document.getElementsByClassName('list-title')[0];\n  newTitleName.textContent = '';\n  newTitleName.textContent = project.getName();\n\n  currentProject = project;\n  displayTasks(currentProject);\n}\n\nexport function addTaskToCurrentProject(title, description) {\n  const project = getCurrentProject();\n  if (project) {\n    const newTask = createTask(title, description);\n    currentProject.addTask(newTask);\n    displayTasks(currentProject.getTasks);\n  }\n}\n","/* eslint-disable no-console */\nimport { compareAsc, toDate } from 'date-fns';\nimport Project from './projects';\nimport Task from './tasks';\n\nexport default class TodoList {\n  constructor() {\n    console.log('Constructor in TodoList ran');\n    this.projects = [];\n    this.projects.push(new Project('Current'));\n    this.projects.push(new Project('Today'));\n    this.projects.push(new Project('This week'));\n  }\n\n  setProjects(projects) {\n    this.projects = projects;\n  }\n\n  getProjects() {\n    return this.projects;\n  }\n\n  getProject(projectName) {\n    return this.getProjects.find((project) => project.getName() === projectName);\n  }\n\n  contains(projectName) {\n    return this.projects.some((project) => project.getName() === projectName);\n  }\n\n  addProject(newProject) {\n    if (this.projects.find((project) => project.name === newProject.name)) return;\n    this.projects.push(newProject);\n  }\n\n  deleteProject(projectName) {\n    const projectDeleted = this.projects.find(\n      (project) => project.getName() === projectName,\n    );\n    this.projects.splice(this.projects.indexOf(projectDeleted), 1);\n  }\n\n  updateTodayProject() {\n    this.getProject('Today').tasks = [];\n\n    this.projects.forEach((project) => {\n      if (project.getName() === 'Today' || project.getName() === 'This week') return;\n\n      const todayTasks = project.getDailyTasks();\n      todayTasks.forEach((task) => {\n        const taskName = `${task.getName()} ${project.getName()}`;\n        const taskDescription = `${task.getDescription()} ${project.getDescription()}`;\n\n        this.getProject('Today').addTask(new Task(taskName, taskDescription, task.getDate()));\n      });\n    });\n  }\n\n  updateWeekProject() {\n    this.getProject('This week').tasks = [];\n\n    this.projects.forEach((project) => {\n      if (project.getName() === 'This week' || project.getName() === 'Today') return;\n\n      const weekTasks = project.getWeeklyTasks();\n      weekTasks.forEach((task) => {\n        const taskName = `${task.getName()} {$(project.getName()})`;\n        const taskDescription = `${task.getDescription()} {$(project.getDescription()})`;\n        this.getProject('Today').addTask(new Task(taskName, taskDescription, task.getDate()));\n      });\n    });\n\n    this.getProject('This week').setTasks(\n      this.getProject('This week').getTasks().sort((task1, task2) => compareAsc(\n        toDate(new Date(task1.getDateFormatted())),\n        toDate(new Date(task2.getDateFormatted())),\n      )),\n    );\n  }\n}\n","/* eslint-disable no-console */\nexport function makeItemActive() {\n//   console.log('makeItemActive ran');\n  const item = document.querySelector('.add-container');\n  //  console.log(item);\n  item.style.display = 'flex';\n}\n\nexport function closePopup() {\n  const cancelForm = document.querySelector('.add-container');\n  //  console.log(closePopup);\n  //  cancelForm.classlist.remove('active');\n  cancelForm.style.display = 'none';\n}\n\nexport function makeProjectFormActive() {\n  const projectAdd = document.querySelector('.project-form-container');\n  projectAdd.style.display = 'flex';\n}\n\nexport function closeProjectFormPopup() {\n  const cancelForm = document.querySelector('.project-form-container');\n  cancelForm.style.display = 'none';\n}\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* eslint-disable semi */\n/* eslint-disable no-console */\n// import createParagraph from './creation-segments'\n// import { sub } from 'date-fns';\n\nimport './css/style.scss'\nimport {\n  createScheduledProject,\n  createProjectCreation,\n  createFormProject,\n} from './creation-segments';\nimport { makeItemActive, closePopup } from './utilities';\nimport applyClicksButtons from './interface';\n\nfunction createHeader() {\n  const pageBody = document.querySelector('#content')\n\n  const headerDiv = document.createElement('div')\n  headerDiv.classList.add('header')\n  pageBody.appendChild(headerDiv)\n\n  const iconSpan = document.createElement('span');\n  iconSpan.classList.add('material-symbols-outlined');\n  iconSpan.classList.add('make-bigger')\n  iconSpan.textContent = 'checklist'\n  headerDiv.appendChild(iconSpan)\n\n  const headerTitle = document.createElement('div')\n  headerTitle.classList.add('page-title')\n  headerTitle.innerHTML = 'To-do List'\n  headerDiv.appendChild(headerTitle)\n\n  return headerDiv;\n}\n\nfunction createFooter() {\n  const footer = document.createElement('footer');\n  footer.classList.add('footer');\n\n  const copyrightThing = document.createElement('p')\n  copyrightThing.textContent = `Copyright © ${new Date().getFullYear()} Employed Ranger`;\n\n  footer.appendChild(copyrightThing);\n  return footer;\n}\n\nexport default function createForm() {\n  const addContainer = document.createElement('div')\n  addContainer.classList.add('add-container')\n  const titleContainer = document.createElement('input')\n  titleContainer.setAttribute('id', 'input-title')\n  titleContainer.setAttribute('placeholder', 'Task Title')\n  titleContainer.setAttribute('maxlength', '25')\n  titleContainer.setAttribute('type', 'text')\n\n  const descriptionContainer = document.createElement('input')\n  descriptionContainer.setAttribute('id', 'input-description')\n  descriptionContainer.setAttribute('placeholder', 'Task description')\n  descriptionContainer.setAttribute('maxlength', '50')\n  descriptionContainer.setAttribute('type', 'text')\n\n  const buttonContainer = document.createElement('div')\n  buttonContainer.classList.add('form-container')\n\n  const submitButton = document.createElement('button')\n  submitButton.classList.add('submit-form')\n  submitButton.classList.add('form')\n  submitButton.textContent = 'Add Task'\n  buttonContainer.appendChild(submitButton)\n\n  const cancelButton = document.createElement('button')\n  cancelButton.classList.add('cancel-form')\n  cancelButton.classList.add('form')\n  cancelButton.textContent = 'Cancel'\n  cancelButton.addEventListener('click', () => {\n    closePopup();\n  })\n  buttonContainer.appendChild(cancelButton)\n\n  addContainer.appendChild(titleContainer)\n  addContainer.appendChild(descriptionContainer)\n  addContainer.appendChild(buttonContainer)\n  return addContainer;\n}\n\nfunction createSidebar() {\n  const sidebarSection = document.createElement('div')\n  sidebarSection.classList.add('sidebar')\n  const scheduledContainer = document.createElement('div')\n  scheduledContainer.classList.add('scheduled-container')\n  sidebarSection.appendChild(scheduledContainer)\n\n  scheduledContainer.appendChild(createScheduledProject('current-list', 'Current', 'event_upcoming'));\n  scheduledContainer.appendChild(createScheduledProject('today-list', 'Today', 'today'));\n  scheduledContainer.appendChild(createScheduledProject('week-list', 'This week', 'date_range'));\n\n  const projectContainer = document.createElement('div')\n  projectContainer.classList.add('project-container')\n  sidebarSection.appendChild(projectContainer)\n\n  const projectHeading = document.createElement('p')\n  projectHeading.classList.add('project-heading')\n  projectHeading.textContent = 'Projects'\n  projectContainer.appendChild(projectHeading)\n\n  const listContainer = document.createElement('div')\n  listContainer.classList.add('list-container-projects')\n  projectContainer.appendChild(listContainer)\n\n  const addProject = document.createElement('div')\n  addProject.classList.add('add-project')\n\n  listContainer.appendChild(createProjectCreation('Mow the lawn', 'task', ''))\n  listContainer.appendChild(createProjectCreation('Count chips', 'task', ''))\n  projectContainer.appendChild(createProjectCreation('Add Project', 'add', 'yes'))\n  projectContainer.appendChild(createFormProject())\n\n  return sidebarSection;\n}\n\nfunction createTodo() {\n  const boxContainer = document.createElement('div')\n  boxContainer.classList.add('box-container')\n\n  const listContainer = document.createElement('div')\n  listContainer.classList.add('list-container')\n  boxContainer.appendChild(listContainer)\n\n  const listTitle = document.createElement('h1')\n  listTitle.classList.add('list-title')\n  listTitle.textContent = 'Current to-do list'\n  listContainer.appendChild(listTitle)\n\n  const todoSection = document.createElement('div')\n  todoSection.classList.add('Todo-section')\n  listContainer.appendChild(todoSection)\n\n  const addTaskButton = document.createElement('button')\n  addTaskButton.classList.add('add-task')\n\n  const buttonText = document.createElement('div')\n  buttonText.classList.add('button-text')\n  buttonText.textContent = 'Add Task'\n\n  const iconSpan = document.createElement('span')\n  iconSpan.classList.add('material-symbols-outlined')\n  iconSpan.textContent = 'add'\n  addTaskButton.appendChild(iconSpan)\n  addTaskButton.appendChild(buttonText)\n  addTaskButton.addEventListener('click', () => {\n    makeItemActive();\n  })\n  listContainer.appendChild(addTaskButton)\n  listContainer.appendChild(createForm());\n\n  return boxContainer;\n}\n\nfunction createMainSection() {\n  const content = document.querySelector('#content');\n  const mainSection = document.createElement('div');\n  mainSection.classList.add('main-section-container');\n\n  mainSection.appendChild(createSidebar());\n  mainSection.appendChild(createTodo());\n  content.appendChild(mainSection);\n}\n\nfunction startup() {\n  const content = document.querySelector('#content');\n  content.appendChild(createHeader());\n  createMainSection();\n  content.appendChild(createFooter());\n  applyClicksButtons();\n  // switchProject('current-list')\n}\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  startup();\n});\n"],"names":[],"sourceRoot":""}